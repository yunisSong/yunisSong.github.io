I"p<h1 id="nsassert简单使用">NSAssert简单使用</h1>

<p><code class="language-plaintext highlighter-rouge">NSAssert</code> 的定义如下：</p>

<div class="language-objective_c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#define NSAssert(condition, desc, ...)	\
    do {				\
	__PRAGMA_PUSH_NO_EXTRA_ARG_WARNINGS \
	if (!(condition)) {		\
        NSString *__assert_file__ = [NSString stringWithUTF8String:__FILE__]; \
            __assert_file__ = __assert_file__ ? __assert_file__ : @"&lt;Unknown File&gt;"; \
	    [[NSAssertionHandler currentHandler] handleFailureInMethod:_cmd \
		object:self file:__assert_file__ \
	    	lineNumber:__LINE__ description:(desc), ##__VA_ARGS__]; \
	}				\
        __PRAGMA_POP_NO_EXTRA_ARG_WARNINGS \
    } while(0)
#endif
</span></code></pre></div></div>

<ul>
  <li>当 <code class="language-plaintext highlighter-rouge">condition</code> 判断条件为 <code class="language-plaintext highlighter-rouge">假</code> 的时候，程序终止，提示错误，提示语为 <code class="language-plaintext highlighter-rouge">desc</code>。</li>
  <li>当 <code class="language-plaintext highlighter-rouge">condition</code> 判断条件为 <code class="language-plaintext highlighter-rouge">真</code> 的时候，程序继续运行。</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> NSAssert(self.umPushAppKey != nil, @"请设置友盟key");
</code></pre></div></div>

<ul>
  <li>当 <code class="language-plaintext highlighter-rouge">self.umPushAppKey</code> 为 <code class="language-plaintext highlighter-rouge">nil</code>，判断条件 <code class="language-plaintext highlighter-rouge">self.umPushAppKey != nil</code> 为 <code class="language-plaintext highlighter-rouge">假</code>，程序终止，提示 <code class="language-plaintext highlighter-rouge">请设置友盟key</code>。
    <ul>
      <li>提示语为： <code class="language-plaintext highlighter-rouge">Terminating app due to uncaught exception 'NSInternalInconsistencyException', reason: '请设置友盟key'</code></li>
    </ul>
  </li>
  <li>当 <code class="language-plaintext highlighter-rouge">self.umPushAppKey</code> 不为 <code class="language-plaintext highlighter-rouge">nil</code>，判断条件 <code class="language-plaintext highlighter-rouge">self.umPushAppKey != nil</code> 为 <code class="language-plaintext highlighter-rouge">真</code>，程序继续运行。</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> NSAssert(self.umPushAppKey, @"请设置友盟key");
</code></pre></div></div>

<ul>
  <li>当 <code class="language-plaintext highlighter-rouge">self.umPushAppKey</code> 为 <code class="language-plaintext highlighter-rouge">nil</code>，判断条件 <code class="language-plaintext highlighter-rouge">self.umPushAppKey</code> 为 <code class="language-plaintext highlighter-rouge">假</code>，程序终止，提示 <code class="language-plaintext highlighter-rouge">请设置友盟key</code>。
    <ul>
      <li>提示语为： <code class="language-plaintext highlighter-rouge">Terminating app due to uncaught exception 'NSInternalInconsistencyException', reason: '请设置友盟key'</code></li>
    </ul>
  </li>
  <li>当 <code class="language-plaintext highlighter-rouge">self.umPushAppKey</code> 不为 <code class="language-plaintext highlighter-rouge">nil</code>，判断条件 <code class="language-plaintext highlighter-rouge">self.umPushAppKey</code> 为 <code class="language-plaintext highlighter-rouge">真</code>，程序继续运行。</li>
</ul>

:ET