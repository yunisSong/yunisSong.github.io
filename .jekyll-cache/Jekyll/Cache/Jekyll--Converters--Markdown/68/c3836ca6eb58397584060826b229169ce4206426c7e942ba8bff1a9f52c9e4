I"Ù"<h1 id="ä¸€ä¸ªå¥½ç”¨çš„uibuttonæ‰©å±•">ä¸€ä¸ªå¥½ç”¨çš„UIButtonæ‰©å±•</h1>

<h4 id="uibuttonextendtouchrecth">UIButton+ExtendTouchRect.h</h4>

<div class="language-objective_c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#import &lt;UIKit/UIKit.h&gt;
</span>
<span class="k">@interface</span> <span class="nc">UIButton</span> <span class="p">(</span><span class="nl">ExtendTouchRect</span><span class="p">)</span>
<span class="k">@property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">)</span><span class="n">UIEdgeInsets</span> <span class="n">touchExtendInset</span><span class="p">;</span>

<span class="k">@end</span>
</code></pre></div></div>
<h4 id="uibuttonextendtouchrectm">UIButton+ExtendTouchRect.m</h4>

<div class="language-objective_c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#import "UIButton+ExtendTouchRect.h"
#import &lt;objc/runtime.h&gt;
</span><span class="kt">void</span> <span class="nf">Swizzle</span><span class="p">(</span><span class="n">Class</span> <span class="n">c</span><span class="p">,</span> <span class="n">SEL</span> <span class="n">orig</span><span class="p">,</span> <span class="n">SEL</span> <span class="n">new</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">Method</span> <span class="n">origMethod</span> <span class="o">=</span> <span class="n">class_getInstanceMethod</span><span class="p">(</span><span class="n">c</span><span class="p">,</span> <span class="n">orig</span><span class="p">);</span>
    <span class="n">Method</span> <span class="n">newMethod</span> <span class="o">=</span> <span class="n">class_getInstanceMethod</span><span class="p">(</span><span class="n">c</span><span class="p">,</span> <span class="n">new</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">class_addMethod</span><span class="p">(</span><span class="n">c</span><span class="p">,</span> <span class="n">orig</span><span class="p">,</span> <span class="n">method_getImplementation</span><span class="p">(</span><span class="n">newMethod</span><span class="p">),</span> <span class="n">method_getTypeEncoding</span><span class="p">(</span><span class="n">newMethod</span><span class="p">))){</span>
        <span class="n">class_replaceMethod</span><span class="p">(</span><span class="n">c</span><span class="p">,</span> <span class="n">new</span><span class="p">,</span> <span class="n">method_getImplementation</span><span class="p">(</span><span class="n">origMethod</span><span class="p">),</span> <span class="n">method_getTypeEncoding</span><span class="p">(</span><span class="n">origMethod</span><span class="p">));</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="n">method_exchangeImplementations</span><span class="p">(</span><span class="n">origMethod</span><span class="p">,</span> <span class="n">newMethod</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">@implementation</span> <span class="nc">UIView</span> <span class="p">(</span><span class="nl">ExtendTouchRect</span><span class="p">)</span>
<span class="k">+</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">load</span> <span class="p">{</span>
    <span class="n">Swizzle</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="k">@selector</span><span class="p">(</span><span class="n">pointInside</span><span class="o">:</span><span class="n">withEvent</span><span class="o">:</span><span class="p">),</span> <span class="k">@selector</span><span class="p">(</span><span class="n">myPointInside</span><span class="o">:</span><span class="n">withEvent</span><span class="o">:</span><span class="p">));</span>
<span class="p">}</span>

<span class="k">-</span> <span class="p">(</span><span class="n">BOOL</span><span class="p">)</span><span class="nf">myPointInside</span><span class="p">:(</span><span class="n">CGPoint</span><span class="p">)</span><span class="nv">point</span> <span class="nf">withEvent</span><span class="p">:(</span><span class="n">UIEvent</span> <span class="o">*</span><span class="p">)</span><span class="nv">event</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">UIEdgeInsetsEqualToEdgeInsets</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">touchExtendInset</span><span class="p">,</span> <span class="n">UIEdgeInsetsZero</span><span class="p">)</span> <span class="o">||</span> <span class="n">self</span><span class="p">.</span><span class="n">hidden</span> <span class="o">||</span>
        <span class="p">([</span><span class="n">self</span> <span class="nf">isKindOfClass</span><span class="p">:</span><span class="n">UIControl</span><span class="p">.</span><span class="n">class</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="p">((</span><span class="n">UIControl</span> <span class="o">*</span><span class="p">)</span><span class="n">self</span><span class="p">).</span><span class="n">enabled</span><span class="p">))</span> <span class="p">{</span>
        <span class="k">return</span> <span class="p">[</span><span class="n">self</span> <span class="nf">myPointInside</span><span class="p">:</span><span class="n">point</span> <span class="nf">withEvent</span><span class="p">:</span><span class="n">event</span><span class="p">];</span> <span class="c1">// original implementation</span>
    <span class="p">}</span>
    <span class="n">CGRect</span> <span class="n">hitFrame</span> <span class="o">=</span> <span class="n">UIEdgeInsetsInsetRect</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">bounds</span><span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="n">touchExtendInset</span><span class="p">);</span>
    <span class="n">hitFrame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span> <span class="o">=</span> <span class="n">MAX</span><span class="p">(</span><span class="n">hitFrame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span> <span class="c1">// don't allow negative sizes</span>
    <span class="n">hitFrame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span> <span class="o">=</span> <span class="n">MAX</span><span class="p">(</span><span class="n">hitFrame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
    <span class="k">return</span> <span class="n">CGRectContainsPoint</span><span class="p">(</span><span class="n">hitFrame</span><span class="p">,</span> <span class="n">point</span><span class="p">);</span>
<span class="p">}</span>

<span class="k">static</span> <span class="kt">char</span> <span class="n">touchExtendInsetKey</span><span class="p">;</span>
<span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setTouchExtendInset</span><span class="p">:(</span><span class="n">UIEdgeInsets</span><span class="p">)</span><span class="nv">touchExtendInset</span> <span class="p">{</span>
    <span class="n">objc_setAssociatedObject</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">touchExtendInsetKey</span><span class="p">,</span> <span class="p">[</span><span class="n">NSValue</span> <span class="nf">valueWithUIEdgeInsets</span><span class="p">:</span><span class="n">touchExtendInset</span><span class="p">],</span>
                             <span class="n">OBJC_ASSOCIATION_RETAIN</span><span class="p">);</span>
<span class="p">}</span>

<span class="k">-</span> <span class="p">(</span><span class="n">UIEdgeInsets</span><span class="p">)</span><span class="n">touchExtendInset</span> <span class="p">{</span>
    <span class="k">return</span> <span class="p">[</span><span class="n">objc_getAssociatedObject</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">touchExtendInsetKey</span><span class="p">)</span> <span class="nf">UIEdgeInsetsValue</span><span class="p">];</span>
<span class="p">}</span>

<span class="k">@end</span>
</code></pre></div></div>

<h4 id="ä½¿ç”¨">ä½¿ç”¨</h4>

<p>`    [self.editButton setTouchExtendInset:UIEdgeInsetsMake(-10, -10, -10, -10)];
`</p>

:ET